{"remainingRequest":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/charles/Documents/Vue/pharmacy-map/src/components/VueLeaflet.vue?vue&type=style&index=0&id=06e80047&scoped=true&lang=css&","dependencies":[{"path":"/Users/charles/Documents/Vue/pharmacy-map/src/components/VueLeaflet.vue","mtime":1581439155701},{"path":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAifmxlYWZsZXQubWFya2VyY2x1c3Rlci9kaXN0L01hcmtlckNsdXN0ZXIuY3NzIjsKQGltcG9ydCAifmxlYWZsZXQubWFya2VyY2x1c3Rlci9kaXN0L01hcmtlckNsdXN0ZXIuRGVmYXVsdC5jc3MiOwo="},{"version":3,"sources":["VueLeaflet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA","file":"VueLeaflet.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"vue-leaflet w-9/12 h-screen\">\n    <l-map :zoom=\"zoom\" :center=\"center\">\n      <l-tile-layer :url=\"url\" :attribution=\"attribution\"></l-tile-layer>\n      <v-marker-cluster :options=\"clusterOptions\">\n        <l-marker v-for=\"item in pharmacies\"\n          :key=\"item.id\"\n          :icon=\"customIcon(item.properties)\"\n          :lat-lng=\"getGeometry(item.geometry)\"\n        >\n          <l-popup :content=\"getInfo(item.properties)\"></l-popup>\n        </l-marker>\n      </v-marker-cluster>\n    </l-map>\n  </div>\n</template>\n\n<script>\nimport {\n  LMap,\n  LTileLayer,\n  LMarker,\n  LPopup,\n} from 'vue2-leaflet';\nimport { latLng, Icon } from 'leaflet';\nimport Vue2LeafletMarkerCluster from 'vue2-leaflet-markercluster';\n\n\nexport default {\n  name: 'VueLeaflet',\n  components: {\n    LMap,\n    LTileLayer,\n    LMarker,\n    LPopup,\n    'v-marker-cluster': Vue2LeafletMarkerCluster,\n  },\n  data() {\n    return {\n      zoom: 14,\n      center: latLng(22.627333, 120.318065),\n      url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>',\n      iconColor: {\n        grey: this.customIconColor('grey'),\n        blue: this.customIconColor('blue'),\n        gold: this.customIconColor('gold'),\n        green: this.customIconColor('green'),\n        red: this.customIconColor('red'),\n      },\n      clusterOptions: {\n        disableClusteringAtZoom: 16,\n      },\n    };\n  },\n  computed: {\n    // 更新口罩數量\n    pharmacies() {\n      return this.$store.state.pharmacies;\n    },\n  },\n  methods: {\n    // 座標經緯度\n    getGeometry(geo) {\n      return latLng(geo.coordinates[1], geo.coordinates[0]); // latLng(緯度，經度)\n    },\n    // 座標彈出視窗\n    getInfo(prop) {\n      // const phone = `(${prop.phone.substr(0, 2)})-${prop.phone.substr(4)}`;\n      const updated = prop.updated === '' ? '無' : prop.updated;\n      return `\n        <h1 class=\"text-xl font-medium mb-2\">${prop.name}</h1>\n        <div class=\"text-base text-grey mb-2\">\n          <i class=\"fas fa-map-marker-alt mr-1\"></i>\n          <span>${prop.address}</span>\n        </div>\n        <div class=\"text-base text-grey mb-2\">\n          <i class=\"fas fa-phone-volume mr-1\"></i>\n          <span>${prop.phone}</span>\n        </div>\n        <div class=\"text-base flex mb-2 justify-center\">\n          <div class=\"text-center text-white bg-primary py-3 rounded-l rounded-r-none border-r w-1/2\">\n            <span class=\"mr-1\">成人口罩:</span>\n            <span>${prop.mask_adult}</span>\n          </div>\n          <div class=\"text-center text-white bg-primary py-3 rounded-r rounded-l-none w-1/2\">\n            <span class=\"mr-1\">兒童口罩:</span>\n            <span>${prop.mask_child}</span>\n          </div>\n        </div>\n        <div class=\"text-sm text-grey\">更新時間: ${updated}</div>\n      `;\n    },\n    // 座標顏色\n    customIconColor(color) {\n      // leaflet-color-markers\n      const iconColor = new Icon({\n        iconUrl: `https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-${color}.png`,\n        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n        iconSize: [25, 41],\n        iconAnchor: [12, 41],\n        popupAnchor: [1, -34],\n        shadowSize: [41, 41],\n      });\n      return iconColor;\n    },\n    // 依口罩數量(成人+兒童)區分座標顏色\n    customIcon(prop) {\n      const quantity = prop.mask_adult + prop.mask_child;\n      let icon = this.iconColor.blue;\n      if (quantity > 100) {\n        icon = this.iconColor.green;\n      } else if (quantity > 50) {\n        icon = this.iconColor.gold;\n      } else if (quantity > 0) {\n        icon = this.iconColor.red;\n      } else {\n        icon = this.iconColor.grey;\n      }\n      return icon;\n    },\n  },\n};\n</script>\n\n<style scoped>\n  @import \"~leaflet.markercluster/dist/MarkerCluster.css\";\n  @import \"~leaflet.markercluster/dist/MarkerCluster.Default.css\";\n</style>\n"]}]}
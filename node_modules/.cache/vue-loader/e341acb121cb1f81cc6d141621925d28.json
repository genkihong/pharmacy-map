{"remainingRequest":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/charles/Documents/Vue/pharmacy-map/src/components/VueLeaflet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/charles/Documents/Vue/pharmacy-map/src/components/VueLeaflet.vue","mtime":1581658153924},{"path":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgTE1hcCwKICBMVGlsZUxheWVyLAogIExNYXJrZXIsCiAgTFBvcHVwLAp9IGZyb20gJ3Z1ZTItbGVhZmxldCc7CmltcG9ydCB7IEljb24gfSBmcm9tICdsZWFmbGV0JzsKaW1wb3J0IFZ1ZTJMZWFmbGV0TWFya2VyQ2x1c3RlciBmcm9tICd2dWUyLWxlYWZsZXQtbWFya2VyY2x1c3Rlcic7CgoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdWdWVMZWFmbGV0JywKICBwcm9wczogewogICAgdXBkYXRlTWFwOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgfSwKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIExNYXAsCiAgICBMVGlsZUxheWVyLAogICAgTE1hcmtlciwKICAgIExQb3B1cCwKICAgICd2LW1hcmtlci1jbHVzdGVyJzogVnVlMkxlYWZsZXRNYXJrZXJDbHVzdGVyLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHpvb206IDEyLAogICAgICAvLyBjZW50ZXI6IGxhdExuZygyMi42MjczMzMsIDEyMC4zMTgwNjUpLAogICAgICBjZW50ZXI6IFsyMi42MjczMzMsIDEyMC4zMTgwNjVdLAogICAgICBib3VuZHM6IG51bGwsCiAgICAgIHVybDogJ2h0dHBzOi8ve3N9LnRpbGUub3BlbnN0cmVldG1hcC5vcmcve3p9L3t4fS97eX0ucG5nJywKICAgICAgYXR0cmlidXRpb246ICdNYXAgZGF0YSAmY29weTsgPGEgaHJlZj0iaHR0cHM6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvIj5PcGVuU3RyZWV0TWFwPC9hPiBjb250cmlidXRvcnMsIDxhIGhyZWY9Imh0dHBzOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1zYS8yLjAvIj5DQy1CWS1TQTwvYT4nLAogICAgICBpY29uQ29sb3I6IHsKICAgICAgICBncmV5OiB0aGlzLmN1c3RvbUljb25Db2xvcignZ3JleScpLAogICAgICAgIGJsdWU6IHRoaXMuY3VzdG9tSWNvbkNvbG9yKCdibHVlJyksCiAgICAgICAgZ29sZDogdGhpcy5jdXN0b21JY29uQ29sb3IoJ2dvbGQnKSwKICAgICAgICBncmVlbjogdGhpcy5jdXN0b21JY29uQ29sb3IoJ2dyZWVuJyksCiAgICAgICAgcmVkOiB0aGlzLmN1c3RvbUljb25Db2xvcigncmVkJyksCiAgICAgIH0sCiAgICAgIGNsdXN0ZXJPcHRpb25zOiB7CiAgICAgICAgZGlzYWJsZUNsdXN0ZXJpbmdBdFpvb206IDE2LAogICAgICB9LAogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICB1cGRhdGVNYXAoKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKCfnt6/luqYnLCB0aGlzLnVwZGF0ZU1hcFswXS5nZW9tZXRyeS5jb29yZGluYXRlc1sxXSk7CiAgICAgIC8vIGNvbnNvbGUubG9nKCfntpPluqYnLCB0aGlzLnVwZGF0ZU1hcFswXS5nZW9tZXRyeS5jb29yZGluYXRlc1swXSk7CiAgICAgIHRoaXMuY2VudGVyID0gW3RoaXMudXBkYXRlTWFwWzBdLmdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdLCB0aGlzLnVwZGF0ZU1hcFswXS5nZW9tZXRyeS5jb29yZGluYXRlc1swXV07CiAgICB9LAogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIOabtOaWsOWPo+e9qeaVuOmHjwogICAgcGhhcm1hY2llcygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnBoYXJtYWNpZXM7CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgem9vbVVwZGF0ZWQoem9vbSkgewogICAgICB0aGlzLnpvb20gPSB6b29tOwogICAgfSwKICAgIGNlbnRlclVwZGF0ZWQoY2VudGVyKSB7CiAgICAgIHRoaXMuY2VudGVyID0gY2VudGVyOwogICAgfSwKICAgIGJvdW5kc1VwZGF0ZWQoYm91bmRzKSB7CiAgICAgIHRoaXMuYm91bmRzID0gYm91bmRzOwogICAgfSwKICAgIC8vIOW6p+aomee2k+e3r+W6pgogICAgZ2V0R2VvbWV0cnkoZ2VvKSB7CiAgICAgIC8vIHJldHVybiBsYXRMbmcoZ2VvLmNvb3JkaW5hdGVzWzFdLCBnZW8uY29vcmRpbmF0ZXNbMF0pOyAvLyBsYXRMbmco57ev5bqm77yM57aT5bqmKQogICAgICByZXR1cm4gW2dlby5jb29yZGluYXRlc1sxXSwgZ2VvLmNvb3JkaW5hdGVzWzBdXTsgLy8gbGF0TG5nKOe3r+W6pu+8jOe2k+W6pikKICAgIH0sCiAgICAvLyDluqfmqJnpoY/oibIKICAgIGN1c3RvbUljb25Db2xvcihjb2xvcikgewogICAgICAvLyBsZWFmbGV0LWNvbG9yLW1hcmtlcnMKICAgICAgY29uc3QgaWNvbkNvbG9yID0gbmV3IEljb24oewogICAgICAgIGljb25Vcmw6IGBodHRwczovL2Nkbi5yYXdnaXQuY29tL3BvaW50aGkvbGVhZmxldC1jb2xvci1tYXJrZXJzL21hc3Rlci9pbWcvbWFya2VyLWljb24tMngtJHtjb2xvcn0ucG5nYCwKICAgICAgICBzaGFkb3dVcmw6ICdodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9sZWFmbGV0LzAuNy43L2ltYWdlcy9tYXJrZXItc2hhZG93LnBuZycsCiAgICAgICAgaWNvblNpemU6IFsyNSwgNDFdLAogICAgICAgIGljb25BbmNob3I6IFsxMiwgNDFdLAogICAgICAgIHBvcHVwQW5jaG9yOiBbMSwgLTM0XSwKICAgICAgICBzaGFkb3dTaXplOiBbNDEsIDQxXSwKICAgICAgfSk7CiAgICAgIHJldHVybiBpY29uQ29sb3I7CiAgICB9LAogICAgLy8g5L6d5Y+j572p5pW46YePKOaIkOS6uivlhZLnq6Up5Y2A5YiG5bqn5qiZ6aGP6ImyCiAgICBjdXN0b21JY29uKHByb3ApIHsKICAgICAgY29uc3QgcXVhbnRpdHkgPSBwcm9wLm1hc2tfYWR1bHQgKyBwcm9wLm1hc2tfY2hpbGQ7CiAgICAgIGxldCBpY29uID0gdGhpcy5pY29uQ29sb3IuYmx1ZTsKICAgICAgaWYgKHF1YW50aXR5ID4gMTAwKSB7CiAgICAgICAgaWNvbiA9IHRoaXMuaWNvbkNvbG9yLmdyZWVuOwogICAgICB9IGVsc2UgaWYgKHF1YW50aXR5ID4gNTApIHsKICAgICAgICBpY29uID0gdGhpcy5pY29uQ29sb3IuZ29sZDsKICAgICAgfSBlbHNlIGlmIChxdWFudGl0eSA+IDApIHsKICAgICAgICBpY29uID0gdGhpcy5pY29uQ29sb3IucmVkOwogICAgICB9IGVsc2UgewogICAgICAgIGljb24gPSB0aGlzLmljb25Db2xvci5ncmV5OwogICAgICB9CiAgICAgIHJldHVybiBpY29uOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["VueLeaflet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VueLeaflet.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"vue-leaflet w-9/12 h-screen\">\n    <l-map\n    :zoom=\"zoom\"\n    :center=\"center\"\n    @update:zoom=\"zoomUpdated\"\n    @update:center=\"centerUpdated\"\n    @update:bounds=\"boundsUpdated\"\n    >\n      <l-tile-layer :url=\"url\" :attribution=\"attribution\"></l-tile-layer>\n      <v-marker-cluster :options=\"clusterOptions\">\n        <l-marker v-for=\"item in updateMap\"\n          :key=\"item.id\"\n          :icon=\"customIcon(item.properties)\"\n          :lat-lng=\"getGeometry(item.geometry)\"\n        >\n          <l-popup>\n            <h1 class=\"text-xl font-medium mb-2\">{{item.properties.name}}</h1>\n            <div class=\"text-base text-grey flex items-center mb-2\">\n              <i class=\"map-icon mr-2 block h-4 w-4 bg-no-repeat bg-contain\"></i>\n              <span>{{item.properties.address}}</span>\n            </div>\n            <div class=\"text-base text-grey flex items-center mb-2\">\n              <i class=\"phone-icon mr-2 block h-4 w-4 bg-no-repeat\"></i>\n              <span>{{item.properties.phone}}</span>\n            </div>\n            <div class=\"text-base flex mb-2 justify-center\">\n              <div class=\"text-center text-white bg-primary py-2 rounded-l rounded-r-none border-r w-1/2\">\n                <span class=\"mr-1\">成人口罩:</span>\n                <span>{{item.properties.mask_adult}}</span>\n              </div>\n              <div class=\"text-center text-white bg-primary py-2 rounded-r rounded-l-none w-1/2\">\n                <span class=\"mr-1\">兒童口罩:</span>\n                <span>{{item.properties.mask_child}}</span>\n              </div>\n            </div>\n            <div class=\"text-sm text-grey\"\n              v-if=\"item.properties.updated\">更新時間: {{item.properties.updated}}</div>\n            <div class=\"text-sm text-grey\" v-else>更新時間: 無</div>\n          </l-popup>\n        </l-marker>\n      </v-marker-cluster>\n    </l-map>\n  </div>\n</template>\n\n<script>\nimport {\n  LMap,\n  LTileLayer,\n  LMarker,\n  LPopup,\n} from 'vue2-leaflet';\nimport { Icon } from 'leaflet';\nimport Vue2LeafletMarkerCluster from 'vue2-leaflet-markercluster';\n\n\nexport default {\n  name: 'VueLeaflet',\n  props: {\n    updateMap: {\n      type: Array,\n    },\n  },\n  components: {\n    LMap,\n    LTileLayer,\n    LMarker,\n    LPopup,\n    'v-marker-cluster': Vue2LeafletMarkerCluster,\n  },\n  data() {\n    return {\n      zoom: 12,\n      // center: latLng(22.627333, 120.318065),\n      center: [22.627333, 120.318065],\n      bounds: null,\n      url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>',\n      iconColor: {\n        grey: this.customIconColor('grey'),\n        blue: this.customIconColor('blue'),\n        gold: this.customIconColor('gold'),\n        green: this.customIconColor('green'),\n        red: this.customIconColor('red'),\n      },\n      clusterOptions: {\n        disableClusteringAtZoom: 16,\n      },\n    };\n  },\n  watch: {\n    updateMap() {\n      // console.log('緯度', this.updateMap[0].geometry.coordinates[1]);\n      // console.log('經度', this.updateMap[0].geometry.coordinates[0]);\n      this.center = [this.updateMap[0].geometry.coordinates[1], this.updateMap[0].geometry.coordinates[0]];\n    },\n  },\n  computed: {\n    // 更新口罩數量\n    pharmacies() {\n      return this.$store.state.pharmacies;\n    },\n  },\n  methods: {\n    zoomUpdated(zoom) {\n      this.zoom = zoom;\n    },\n    centerUpdated(center) {\n      this.center = center;\n    },\n    boundsUpdated(bounds) {\n      this.bounds = bounds;\n    },\n    // 座標經緯度\n    getGeometry(geo) {\n      // return latLng(geo.coordinates[1], geo.coordinates[0]); // latLng(緯度，經度)\n      return [geo.coordinates[1], geo.coordinates[0]]; // latLng(緯度，經度)\n    },\n    // 座標顏色\n    customIconColor(color) {\n      // leaflet-color-markers\n      const iconColor = new Icon({\n        iconUrl: `https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-${color}.png`,\n        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n        iconSize: [25, 41],\n        iconAnchor: [12, 41],\n        popupAnchor: [1, -34],\n        shadowSize: [41, 41],\n      });\n      return iconColor;\n    },\n    // 依口罩數量(成人+兒童)區分座標顏色\n    customIcon(prop) {\n      const quantity = prop.mask_adult + prop.mask_child;\n      let icon = this.iconColor.blue;\n      if (quantity > 100) {\n        icon = this.iconColor.green;\n      } else if (quantity > 50) {\n        icon = this.iconColor.gold;\n      } else if (quantity > 0) {\n        icon = this.iconColor.red;\n      } else {\n        icon = this.iconColor.grey;\n      }\n      return icon;\n    },\n  },\n};\n</script>\n"]}]}
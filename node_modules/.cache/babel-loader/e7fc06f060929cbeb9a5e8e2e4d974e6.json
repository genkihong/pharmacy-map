{"remainingRequest":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/babel-loader/lib/index.js!/Users/charles/Documents/Vue/pharmacy-map/node_modules/eslint-loader/index.js??ref--13-0!/Users/charles/Documents/Vue/pharmacy-map/src/store/index.js","dependencies":[{"path":"/Users/charles/Documents/Vue/pharmacy-map/src/store/index.js","mtime":1581657764446},{"path":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/charles/Documents/Vue/pharmacy-map/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnNldCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKCi8qIGVzbGludC1kaXNhYmxlIGFycm93LWJvZHktc3R5bGUgKi8KaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKVnVlLnVzZShWdWV4KTsKZXhwb3J0IGRlZmF1bHQgbmV3IFZ1ZXguU3RvcmUoewogIHN0YXRlOiB7CiAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgcGhhcm1hY2llczogW10sCiAgICBjb3VudHk6IFtdLAogICAgdG93bnM6IFtdCiAgfSwKICBhY3Rpb25zOiB7CiAgICB1cGRhdGVMb2FkaW5nOiBmdW5jdGlvbiB1cGRhdGVMb2FkaW5nKGNvbnRleHQsIHN0YXR1cykgewogICAgICBjb250ZXh0LmNvbW1pdCgnTE9BRElORycsIHN0YXR1cyk7IC8vIOWft+ihjCBtdXRhdGlvbnMg5YWn55qEIExPQURJTkcg6KaB55SoIGNvbnRleHQuY29tbWl0CiAgICB9LAogICAgZ2V0UGhhcm1hY3k6IGZ1bmN0aW9uIGdldFBoYXJtYWN5KGNvbnRleHQpIHsKICAgICAgdmFyIGFwaSA9ICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20va2lhbmcvcGhhcm1hY2llcy9tYXN0ZXIvanNvbi9wb2ludHMuanNvbic7CiAgICAgIGNvbnRleHQuY29tbWl0KCdMT0FESU5HJywgdHJ1ZSk7CiAgICAgIGF4aW9zLmdldChhcGkpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGNvbnRleHQuY29tbWl0KCdQSEFSTUFDWScsIHJlcy5kYXRhLmZlYXR1cmVzKTsKICAgICAgICBjb250ZXh0LmNvbW1pdCgnQ09VTlRZJywgcmVzLmRhdGEuZmVhdHVyZXMpOwogICAgICAgIGNvbnRleHQuY29tbWl0KCdMT0FESU5HJywgZmFsc2UpOwogICAgICB9KTsKICAgIH0sCiAgICB0b3duczogZnVuY3Rpb24gdG93bnMoY29udGV4dCwgem9uZXMpIHsKICAgICAgY29udGV4dC5jb21taXQoJ1RPV05TJywgem9uZXMpOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBMT0FESU5HOiBmdW5jdGlvbiBMT0FESU5HKHN0YXRlLCBzdGF0dXMpIHsKICAgICAgc3RhdGUuaXNMb2FkaW5nID0gc3RhdHVzOwogICAgfSwKICAgIFBIQVJNQUNZOiBmdW5jdGlvbiBQSEFSTUFDWShzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5waGFybWFjaWVzID0gcGF5bG9hZDsKICAgIH0sCiAgICBDT1VOVFk6IGZ1bmN0aW9uIENPVU5UWShzdGF0ZSwgcGF5bG9hZCkgewogICAgICB2YXIgY2l0eSA9IG5ldyBTZXQoKTsKICAgICAgcGF5bG9hZC5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgIGlmICghdmFsdWUucHJvcGVydGllcy5jb3VudHkpIHJldHVybjsKICAgICAgICBjaXR5LmFkZCh2YWx1ZS5wcm9wZXJ0aWVzLmNvdW50eSk7CiAgICAgIH0pOwogICAgICBzdGF0ZS5jb3VudHkgPSBBcnJheS5mcm9tKGNpdHkpOyAvLyBjb25zb2xlLmxvZygn57ij5biCJywgc3RhdGUuY291bnR5KTsKICAgIH0sCiAgICBUT1dOUzogZnVuY3Rpb24gVE9XTlMoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUudG93bnMgPSBwYXlsb2FkOyAvLyBjb25zb2xlLmxvZygn5Zyw5Y2AJywgc3RhdGUudG93bnMpOwogICAgfQogIH0KfSk7"},{"version":3,"sources":["/Users/charles/Documents/Vue/pharmacy-map/src/store/index.js"],"names":["Vue","Vuex","axios","use","Store","state","isLoading","pharmacies","county","towns","actions","updateLoading","context","status","commit","getPharmacy","api","get","then","res","data","features","zones","mutations","LOADING","PHARMACY","payload","COUNTY","city","Set","forEach","value","properties","add","Array","from","TOWNS"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,KADN;AAELC,IAAAA,UAAU,EAAE,EAFP;AAGLC,IAAAA,MAAM,EAAE,EAHH;AAILC,IAAAA,KAAK,EAAE;AAJF,GADqB;AAO5BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aADO,yBACOC,OADP,EACgBC,MADhB,EACwB;AAC7BD,MAAAA,OAAO,CAACE,MAAR,CAAe,SAAf,EAA0BD,MAA1B,EAD6B,CACM;AACpC,KAHM;AAIPE,IAAAA,WAJO,uBAIKH,OAJL,EAIc;AACnB,UAAMI,GAAG,GAAG,4EAAZ;AACAJ,MAAAA,OAAO,CAACE,MAAR,CAAe,SAAf,EAA0B,IAA1B;AACAZ,MAAAA,KAAK,CAACe,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoB,UAACC,GAAD,EAAS;AAC3BP,QAAAA,OAAO,CAACE,MAAR,CAAe,UAAf,EAA2BK,GAAG,CAACC,IAAJ,CAASC,QAApC;AACAT,QAAAA,OAAO,CAACE,MAAR,CAAe,QAAf,EAAyBK,GAAG,CAACC,IAAJ,CAASC,QAAlC;AACAT,QAAAA,OAAO,CAACE,MAAR,CAAe,SAAf,EAA0B,KAA1B;AACD,OAJD;AAKD,KAZM;AAaPL,IAAAA,KAbO,iBAaDG,OAbC,EAaQU,KAbR,EAae;AACpBV,MAAAA,OAAO,CAACE,MAAR,CAAe,OAAf,EAAwBQ,KAAxB;AACD;AAfM,GAPmB;AAwB5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OADS,mBACDnB,KADC,EACMQ,MADN,EACc;AACrBR,MAAAA,KAAK,CAACC,SAAN,GAAkBO,MAAlB;AACD,KAHQ;AAITY,IAAAA,QAJS,oBAIApB,KAJA,EAIOqB,OAJP,EAIgB;AACvBrB,MAAAA,KAAK,CAACE,UAAN,GAAmBmB,OAAnB;AACD,KANQ;AAOTC,IAAAA,MAPS,kBAOFtB,KAPE,EAOKqB,OAPL,EAOc;AACrB,UAAME,IAAI,GAAG,IAAIC,GAAJ,EAAb;AACAH,MAAAA,OAAO,CAACI,OAAR,CAAgB,UAACC,KAAD,EAAW;AACzB,YAAI,CAACA,KAAK,CAACC,UAAN,CAAiBxB,MAAtB,EAA8B;AAC9BoB,QAAAA,IAAI,CAACK,GAAL,CAASF,KAAK,CAACC,UAAN,CAAiBxB,MAA1B;AACD,OAHD;AAIAH,MAAAA,KAAK,CAACG,MAAN,GAAe0B,KAAK,CAACC,IAAN,CAAWP,IAAX,CAAf,CANqB,CAOrB;AACD,KAfQ;AAgBTQ,IAAAA,KAhBS,iBAgBH/B,KAhBG,EAgBIqB,OAhBJ,EAgBa;AACpBrB,MAAAA,KAAK,CAACI,KAAN,GAAciB,OAAd,CADoB,CAEpB;AACD;AAnBQ;AAxBiB,CAAf,CAAf","sourcesContent":["/* eslint-disable arrow-body-style */\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    isLoading: false,\n    pharmacies: [],\n    county: [],\n    towns: [],\n  },\n  actions: {\n    updateLoading(context, status) {\n      context.commit('LOADING', status); // 執行 mutations 內的 LOADING 要用 context.commit\n    },\n    getPharmacy(context) {\n      const api = 'https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json';\n      context.commit('LOADING', true);\n      axios.get(api).then((res) => {\n        context.commit('PHARMACY', res.data.features);\n        context.commit('COUNTY', res.data.features);\n        context.commit('LOADING', false);\n      });\n    },\n    towns(context, zones) {\n      context.commit('TOWNS', zones);\n    },\n  },\n  mutations: {\n    LOADING(state, status) {\n      state.isLoading = status;\n    },\n    PHARMACY(state, payload) {\n      state.pharmacies = payload;\n    },\n    COUNTY(state, payload) {\n      const city = new Set();\n      payload.forEach((value) => {\n        if (!value.properties.county) return;\n        city.add(value.properties.county);\n      });\n      state.county = Array.from(city);\n      // console.log('縣市', state.county);\n    },\n    TOWNS(state, payload) {\n      state.towns = payload;\n      // console.log('地區', state.towns);\n    },\n  },\n});\n"]}]}